version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./App-Logs/Zookeeper:/var/log/kafka
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    expose:
      - 9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - ./App-Logs/Broker:/var/log/kafka
  centos:
    container_name: centos
    image: centos
    ports:
      - "9308:9308"
    depends_on:
      - broker
    volumes:
      - type: bind
        source: ./Centos/kafka_exporter
        target: /home/appuser/kafka_exporter
      - type: bind
        source: ./Centos/start-kafka-exporter.sh
        target: /home/appuser/start-kafka-exporter.sh
    entrypoint: /home/appuser/start-kafka-exporter.sh
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - broker
    environment:
      KAFKA_CLUSTERS_0_NAME: broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092 # SSL LISTENER!
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
     - 3000:3000
    volumes:
      - ./Grafana/Provisioning/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./Grafana/Provisioning/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./Grafana/Dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    env_file:
      - ./.env
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  producer:
    container_name: producer
    build:
      context: .
      dockerfile: ./Python-Producer/Dockerfile
    restart: always
    volumes:
      - ./App-Logs/Producer/producer-output.log:/usr/src/app/producer-output.log
      - ./.env:/usr/src/app/.env
    env_file:
      - ./.env
    depends_on:
      - broker
  error-producer:
    container_name: error-producer
    build:
      context: .
      dockerfile: ./Python-Error-Producer/Dockerfile
    restart: always
    volumes:
      - ./App-Logs/Error-Producer/producer-output.log:/usr/src/app/producer-output.log
      - ./.env:/usr/src/app/.env
    env_file:
      - ./.env
    depends_on:
      - broker
  influxdb:
    container_name: influxdb
    image: 'influxdb:1.8'
    ports:
      - '8086:8086'
    environment:
      INFLUXDB_DB: "${INFLUXDB_DB_NAME}"
  consumer:
    container_name: consumer
    build:
      context: .
      dockerfile: ./Python-Consumer/Dockerfile
    restart: always
    depends_on:
      - influxdb
      - producer
      - broker
    volumes:
      - ./.env:/usr/src/app/.env
    env_file:
      - ./.env
  opensearch:
    image: opensearchproject/opensearch
    container_name: opensearch
    environment:
      - cluster.name=docker-cluster
      - node.name=opensearch-node
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - ./.env:/usr/share/opensearch/.env
      - ./Opensearch/config/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      - ./Opensearch/scripts/start-opensearch.sh:/usr/share/opensearch/start-opensearch.sh
    env_file:
      - ./.env
    entrypoint: /usr/share/opensearch/start-opensearch.sh
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards
    container_name: opensearch-dashboards
    ports:
      - "5601:5601"
    depends_on:
      - opensearch
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - OPENSEARCH_SECURITY_DISABLED=true
    volumes:
      - ./Opensearch-Dashboards/config/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
      - ./Opensearch-Dashboards/scripts/start-opensearch-dashboards.sh:/usr/share/opensearch-dashboards/start-opensearch-dashboards.sh
    entrypoint: /usr/share/opensearch-dashboards/start-opensearch-dashboards.sh
  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.0
    container_name: logstash
    ports:
      - "5044:5044"
    volumes:
      - ./Logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./Logstash/config//pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./Logstash/config/logstash-broker.conf:/usr/share/logstash/config/logstash-broker.conf
      - ./Logstash/config/logstash-zookeeper.conf:/usr/share/logstash/config/logstash-zookeeper.conf
      - ./Logstash/config/logstash-producer.conf:/usr/share/logstash/config/logstash-producer.conf
      - ./Logstash/config/logstash-filebeat.conf:/usr/share/logstash/config/logstash-filebeat.conf
      - ./Logstash/config/logstash-kafka.conf:/usr/share/logstash/config/logstash-kafka.conf
      - ./Logstash/scripts/start-logstash.sh:/usr/share/logstash/start-logstash.sh
      - ./App-Logs:/shared-logs
    environment:
      LS_JAVA_OPTS: -Xms1g -Xmx1g
      OPENSEARCH_HOST: opensearch:9200
    entrypoint: /usr/share/logstash/start-logstash.sh
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.16.0
    container_name: filebeat
    user: root
    volumes:
      - ./Filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./App-Logs:/shared-logs
      - ./Filebeat/start-filebeat.sh:/usr/share/filebeat/start-filebeat.sh
    entrypoint: /usr/share/filebeat/start-filebeat.sh